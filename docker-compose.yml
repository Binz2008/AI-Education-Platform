# Docker Compose configuration for AI Education Platform

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ai_education
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d ai_education"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://dev_user:dev_password@postgres:5432/ai_education
      REDIS_URL: redis://redis:6379
      # GitHub Integration
      GITHUB_TOKEN: ${GITHUB_TOKEN:-}
      GITHUB_REPO_OWNER: ${GITHUB_REPO_OWNER:-Binz2008}
      GITHUB_REPO_NAME: ${GITHUB_REPO_NAME:-AI-Education-Platform}
      # AI Services
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      HUGGINGFACE_TOKEN: ${HUGGINGFACE_TOKEN:-}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY:-}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      # Notion Integration
      NOTION_TOKEN: ${NOTION_TOKEN:-}
      NOTION_TASKS_DB: ${NOTION_TASKS_DB:-}
      NOTION_METRICS_DB: ${NOTION_METRICS_DB:-}
      NOTION_SPRINTS_DB: ${NOTION_SPRINTS_DB:-}
      # Security
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-secret-key}
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-in-production}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
  redis_data:
